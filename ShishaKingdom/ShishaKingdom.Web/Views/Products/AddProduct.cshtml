@model ShishaKingdom.Web.ViewModels.Products.AddProductViewModel



@using (Html.BeginForm()) 
{

    <div class="form-horizontal">
        @{
            ViewBag.Title = "Нов продукт";
        }
        <h2>Нов продукт</h2>
        @Html.AntiForgeryToken()

        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group col-md-10 col-sm-6">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-10 col-sm-6">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-10 col-sm-6">
            @Html.LabelFor(model => model.Price, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group col-md-10 col-sm-6">
            @Html.LabelFor(model => model.Availability, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EnumDropDownListFor(model => model.Availability, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Availability, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-10 col-sm-6 ">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new {@class = "control-label col-md-1"})
            <div class="col-md-3">
                @Html.EditorFor(model => model.ImageUrl, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group col-md-10 col-sm-6">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.CategoryId, new SelectList(Model.Categories, "Value", "Text",Model.Categories.FirstOrDefault(x=>x.Selected)?.Value), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CategoryId)
            </div>
        </div>  
        <div class="form-group col-md-10 col-sm-6">
            <div class="col-md-offset-1 col-md-3">
                <input type="submit" value="Добави" class="btn btn-default" style="margin-left:0" /> 
            </div>
        </div>
    </div>
}

<div class="col-md-10 col-sm-6">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
